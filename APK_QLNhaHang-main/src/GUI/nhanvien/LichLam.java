/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.nhanvien;



import DAO.LichLamDao; 
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import POJO.LichLamNV;
import java.sql.Time;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JFrame;

/**
 *
 * @author Admin
 */
public class LichLam extends javax.swing.JFrame {

    /**
     * Creates new form TrangChinh
     */
    DefaultTableModel dtm = new DefaultTableModel();
    public LichLam() {
        initComponents();
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        String []tieuDe ={"Mã lịch làm","Mã nhân viên","Họ tên","Ngày làm", "Giờ bắt đầu","Giờ kết thúc"};
        dtm.setColumnIdentifiers(tieuDe);
        
        
        taiDuLieu(new LichLamDao().HienThiDanhSachLichLam());
    }
    
    private void taiDuLieu( ArrayList<LichLamNV> dsLL)
    {
        dtm.setRowCount(0);
        for(LichLamNV ll:dsLL)
        {
            Vector<Object> vec = new Vector<Object>();
            vec.add(ll.getMaLichLam());
            vec.add(ll.getMaNV());
            vec.add(ll.getHoTen());
            vec.add(ll.getNgayLam());
            vec.add(ll.getGioBatDau());
            vec.add(ll.getGioKetThuc());
                    
            dtm.addRow(vec);
        } 
        tbLichLam.setModel(dtm);
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelLeft = new javax.swing.JPanel();
        panelLeft_Top = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtGioBatDau = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtGioKetThuc = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMaLich = new javax.swing.JTextField();
        JDateNgayLam = new com.toedter.calendar.JDateChooser();
        panelLeft_Center = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jDateNgayLamKiem = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbLichLam = new javax.swing.JTable();
        panelRight = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(44, 170, 110));
        jLabel3.setText("Quản lí lịch làm");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel7.setText("Mã nhân viên:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel9.setText("Họ tên nhân viên:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel8.setText("Chọn ngày:");

        txtGioBatDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGioBatDauActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel10.setText("Giờ bắt đầu:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel11.setText("Giờ kết thúc:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel13.setText("Mã lịch làm:");

        txtMaLich.setEnabled(false);

        javax.swing.GroupLayout panelLeft_TopLayout = new javax.swing.GroupLayout(panelLeft_Top);
        panelLeft_Top.setLayout(panelLeft_TopLayout);
        panelLeft_TopLayout.setHorizontalGroup(
            panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeft_TopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
            .addGroup(panelLeft_TopLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLeft_TopLayout.createSequentialGroup()
                        .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13))
                        .addGap(34, 34, 34)
                        .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txtMaLich)))
                    .addGroup(panelLeft_TopLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8))
                .addGap(23, 23, 23)
                .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGioKetThuc)
                    .addComponent(txtGioBatDau, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(JDateNgayLam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58))
        );
        panelLeft_TopLayout.setVerticalGroup(
            panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeft_TopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtMaLich, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(JDateNgayLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGioBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel7)
                        .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLeft_TopLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtGioKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelLeft_TopLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLeft_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel21.setText("Nhập ngày làm:");

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(27, 27, 27)
                        .addComponent(jDateNgayLamKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(77, 77, 77)
                        .addComponent(btnSua)
                        .addGap(86, 86, 86)
                        .addComponent(btnXoa)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReset)
                        .addGap(45, 45, 45))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnTimKiem)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateNgayLamKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTimKiem))
                .addGap(17, 17, 17))
        );

        tbLichLam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbLichLam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbLichLamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbLichLam);

        javax.swing.GroupLayout panelLeft_CenterLayout = new javax.swing.GroupLayout(panelLeft_Center);
        panelLeft_Center.setLayout(panelLeft_CenterLayout);
        panelLeft_CenterLayout.setHorizontalGroup(
            panelLeft_CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLeft_CenterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelLeft_CenterLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        panelLeft_CenterLayout.setVerticalGroup(
            panelLeft_CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeft_CenterLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout panelLeftLayout = new javax.swing.GroupLayout(panelLeft);
        panelLeft.setLayout(panelLeftLayout);
        panelLeftLayout.setHorizontalGroup(
            panelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLeft_Top, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLeftLayout.createSequentialGroup()
                        .addComponent(panelLeft_Center, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        panelLeftLayout.setVerticalGroup(
            panelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelLeft_Top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelLeft_Center, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout panelRightLayout = new javax.swing.GroupLayout(panelRight);
        panelRight.setLayout(panelRightLayout);
        panelRightLayout.setHorizontalGroup(
            panelRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        panelRightLayout.setVerticalGroup(
            panelRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 775, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        int manv;

        try {
            manv = Integer.parseInt(txtMaNhanVien.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số nguyên cho mã nhân viên", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Dừng thực hiện phương thức nếu có lỗi
        }

        // Tiếp tục sử dụng biến manv ở đây sau khi đã gán giá trị thành công


        String tenNV = txtHoTen.getText();
        if (tenNV.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập tên nhân viên", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return; // Dừng thực hiện phương thức nếu có lỗi
        }
        
        Date ngayLam = JDateNgayLam.getDate();  
        if (ngayLam == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày làm", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Dừng thực hiện phương thức nếu có lỗi
        }

        String gioBatDauStr = txtGioBatDau.getText(); // Giờ bắt đầu dưới dạng chuỗi
        String gioKetThucStr = txtGioKetThuc.getText(); // Giờ kết thúc dưới dạng chuỗi

        // Kiểm tra xem chuỗi có rỗng không
        if (gioBatDauStr.isEmpty() || gioKetThucStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giờ bắt đầu và giờ kết thúc", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Dừng thực hiện phương thức nếu có lỗi
        }

        LocalTime gioBatDauLocal, gioKetThucLocal;
        try {
            gioBatDauLocal = LocalTime.parse(gioBatDauStr, DateTimeFormatter.ofPattern("HH:mm:ss")); // Chuyển chuỗi thành kiểu LocalTime
            gioKetThucLocal = LocalTime.parse(gioKetThucStr, DateTimeFormatter.ofPattern("HH:mm:ss")); // Chuyển chuỗi thành kiểu LocalTime
        } catch (DateTimeParseException e) {
            // Xử lý ngoại lệ khi chuỗi không đúng định dạng
            JOptionPane.showMessageDialog(this, "Định dạng giờ không hợp lệ. Vui lòng nhập lại theo định dạng HH:mm:ss", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Dừng thực hiện phương thức nếu có lỗi
        }

        // Chuyển đổi LocalTime thành java.sql.Time
        java.sql.Time gioBatDau = java.sql.Time.valueOf(gioBatDauLocal);
        java.sql.Time gioKetThuc = java.sql.Time.valueOf(gioKetThucLocal);

        LichLamNV ll = new LichLamNV();
        ll.setMaNV(manv);
        ll.setHoTen(tenNV);
        ll.setNgayLam(ngayLam);
        ll.setGioBatDau(gioBatDau);
        ll.setGioKetThuc(gioKetThuc);
        
        LichLamDao.ThemLichLam(ll);
        taiDuLieu(new LichLamDao().HienThiDanhSachLichLam());

        JOptionPane.showMessageDialog(this, "Thêm lịch làm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int maLichLam = Integer.parseInt(txtMaLich.getText());
        int manv = Integer.parseInt(txtMaNhanVien.getText());
        String tenNV = txtHoTen.getText();
        Date ngayLam = JDateNgayLam.getDate();
        String gioBatDauStr = txtGioBatDau.getText(); // Giờ bắt đầu dưới dạng chuỗi
        String gioKetThucStr = txtGioKetThuc.getText(); // Giờ kết thúc dưới dạng chuỗi

        // Chuyển đổi chuỗi thành đối tượng LocalTime
        LocalTime gioBatDauLocal = LocalTime.parse(gioBatDauStr, DateTimeFormatter.ofPattern("HH:mm:ss"));
        LocalTime gioKetThucLocal = LocalTime.parse(gioKetThucStr, DateTimeFormatter.ofPattern("HH:mm:ss")); 

        // Chuyển đổi LocalTime thành java.sql.Time
        java.sql.Time gioBatDau = java.sql.Time.valueOf(gioBatDauLocal);
        java.sql.Time gioKetThuc = java.sql.Time.valueOf(gioKetThucLocal);

        LichLamNV ll = new LichLamNV(maLichLam, manv, tenNV, ngayLam, gioBatDau, gioKetThuc);
       
        
        LichLamDao.SuaLichLam(ll);
        taiDuLieu(new LichLamDao().HienThiDanhSachLichLam());

        JOptionPane.showMessageDialog(this, "Sửa lịch làm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        // Lấy mã lịch từ trường văn bản
        int maLich = Integer.parseInt(txtMaLich.getText());
        // Tạo hộp thoại xác nhận
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

        // Kiểm tra xem người dùng đã xác nhận xóa chưa
        if (confirm == JOptionPane.YES_OPTION) {
            // Nếu người dùng xác nhận xóa, tiến hành xóa lịch làm
            LichLamNV ll = new LichLamNV(maLich, -1, "", null, null, null);
            LichLamDao.XoaLichLam(ll.getMaLichLam());

            // Cập nhật dữ liệu hiển thị
            taiDuLieu(new LichLamDao().HienThiDanhSachLichLam());

            // Thông báo xóa thành công
            JOptionPane.showMessageDialog(this, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } 
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbLichLamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbLichLamMouseClicked
        // TODO add your handling code here:
        int row=tbLichLam.getSelectedRow();
        txtMaLich.setText(tbLichLam.getValueAt(row,0)+"");
        txtMaNhanVien.setText(tbLichLam.getValueAt(row,1)+""); 
        txtHoTen.setText((String)tbLichLam.getValueAt(row,2));
        try { 
        Date ngayLam = (Date) tbLichLam.getValueAt(row, 3); // Lấy giá trị Date trực tiếp từ ResultSet

            // Đặt giá trị ngày sinh cho jDateChooser
            JDateNgayLam.setDate(ngayLam);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        Time gioBatDau = (Time) tbLichLam.getValueAt(row, 4);
        Time gioKetThuc = (Time) tbLichLam.getValueAt(row, 5);
        txtGioBatDau.setText(gioBatDau.toString());
        txtGioKetThuc.setText(gioKetThuc.toString());
       
    }//GEN-LAST:event_tbLichLamMouseClicked

    private void txtGioBatDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGioBatDauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGioBatDauActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtMaLich.setText("");
        txtMaNhanVien.setText("");
        txtHoTen.setText("");
        JDateNgayLam.setDate(null);
        txtGioBatDau.setText("");
        txtGioKetThuc.setText("");
        jDateNgayLamKiem.setDate(null);
        
        txtMaNhanVien.requestFocus();
        taiDuLieu(new LichLamDao().HienThiDanhSachLichLam());
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        
        Date ngayLam = JDateNgayLam.getDate();  
        if (ngayLam == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày làm", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Dừng thực hiện phương thức nếu có lỗi
        }
        else 
        {
        LichLamNV ll = new LichLamNV(-1,-1,"",ngayLam,null,null);
       
        taiDuLieu(new LichLamDao().TimKiemLichLam(ll.getNgayLam()));
        
        JOptionPane.showMessageDialog(this, "Tìm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LichLam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LichLam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LichLam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LichLam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LichLam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JDateNgayLam;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private com.toedter.calendar.JDateChooser jDateNgayLamKiem;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelLeft;
    private javax.swing.JPanel panelLeft_Center;
    private javax.swing.JPanel panelLeft_Top;
    private javax.swing.JPanel panelRight;
    private javax.swing.JTable tbLichLam;
    private javax.swing.JTextField txtGioBatDau;
    private javax.swing.JTextField txtGioKetThuc;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaLich;
    private javax.swing.JTextField txtMaNhanVien;
    // End of variables declaration//GEN-END:variables
}
